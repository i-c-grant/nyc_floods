library(terra)
library(R.utils)

build_date_query <- function(datetime) {
  datetime <- with_tz(datetime, "UTC")

  query_hour <- hour(datetime)

  query_hour <- ifelse(query_hour < 10,
                         paste0("0", query_hour),
                         query_hour) %>%
    as.character()
  
  query_date <- date(datetime) %>%
    str_replace_all("-", "")

  query_type <- ".01h" # get 1 hour precip (as opposed to 6 hour)
  
  query <- paste0(query_date,
                  query_hour,
                  query_type)

  return(query)
}


build_date_queries <- function(start, end) {
  dts <- seq(from = start, to = end, by = "hour")
  queries <- map_chr(dts, build_date_query)
  return(queries)
}


get_dir_names <- function(start, end) {
  ## get monthly directories, e.g. 202001
  dts <- seq(from = start,
                to = end,
                by = "month")

  years <- year(dts) %>%
    as.character

  months <- month(dts)

  months <- ifelse(months < 10,
                     paste0("0", months),
                   months) %>%
    as.character

  dirs <- paste0(years, months)

  return(dirs)
}


get_stage4_paths <- function(start,
                             end,
                             data_dir) {

  dirs <- file.path(data_dir,
                    get_dir_names(start, end))

  queries <- build_date_queries(start,
                                end)
  
  all_stage4_files <- list.files(dirs,
                                 full.names = TRUE,
                                 recursive = TRUE)

  exclude <- paste("st4_pr", "st4_ak", ".24h", ".06h", sep = "|")

  ## filter out Alaska and Puerto Rico files and 6 and 24 hour precip
  stage4_files <-
    all_stage4_files[!grepl(exclude, all_stage4_files)]

  ## filter out files that don't match the queries
  stage4_files <-
    stage4_files[grepl(paste(queries, collapse = "|"), stage4_files)]

  return(stage4_files)
}


## get_stage4_fn <- function(query,
##                           file_list) {

##   stage4_files <- list.files(data_dir,
##                              pattern = query,
##                              full.names = TRUE,
##                              recursive = TRUE)
  
##   ## filter out Alaska and Puerto Rico files
##   keep <- !str_detect(stage4_files, "st4_pr|st4_ak")
##   stage4_files <- stage4_files[keep]

##   ## check that we have exactly one file
##   if (length(stage4_files) > 1) {
##     stop("Multiple stage4 files found for query: ", query)
##   }

##   if (length(stage4_files) == 0) {
##     stop("No stage4 files found for query: ", query)
##   }

##   return(stage4_files)
## }


load_stage4_file <- function(path) {
  ## get extension of file
  ext <- tools::file_ext(path)

  ## if file is compressed, uncompress it
  if ((ext == "Z") || (ext == "gz")) {
    path <- gunzip(path,
                 temporary = TRUE,
                 remove = FALSE,
                 overwrite = TRUE)
  }

  r <- rast(fn)
  
  return(r)
}

clip_to_nyc_polar <- function(r) {
  nyc_boundary <- load_nyc_boundary(polar = TRUE)
  r <- terra::crop(r, nyc_boundary)
  return(r)
}

clip_to_nyc <- function(r) {
  nyc_boundary <- load_nyc_boundary(polar = FALSE)
  r <- terra::crop(r, nyc_boundary)
  return(r)
}

## load_nyc_stage4 <- function(datetime, data_dir) {
##   r <- load_stage4_file(datetime, data_dir) %>%
##     terra::project("EPSG:2263") %>%
##     crop(load_nyc_boundary())
  
##   return(r)
## }


load_nyc_stage4_df <- function(dt_start,
                               dt_end,
                               data_dir) {
 
  dts <- seq(from = dt_start,
             to = dt_end,
             by = "hour")

  paths <- get_stage4_paths(dt_start,
                            dt_end,
                            data_dir)

  rasts <- map(paths, load_stage4_file)
  rasts <- map(rasts, clip_to_nyc_polar)
  rasts <- map(rasts, \(r) terra::project(r, "EPSG:2263"))
    
  df <- map2(rasts, dts,
             \(r, dt) as.data.frame(r, xy = TRUE) %>%
                      as_tibble %>%
                      mutate(time = dt)) %>%
    bind_rows %>%
    rename(hourly_precip = 3)

  return(df)
}

load_nyc_stage4_stars <- function(start_datetime,
                                  end_datetime,
                                  data_dir) {

  df_precip <- load_nyc_stage4_df(start_datetime,
                                  end_datetime,
                                  data_dir)

  stars_precip <- st_as_stars(df_precip,
                              dims = c("x", "y", "time"))

  st_crs(stars_precip) <- st_crs("EPSG:2263")

  return(stars_precip)
}
