#+TITLE: Automated gauge-corrected spatial precipitation maps for urban flood analysis
#+AUTHOR: Ian Grant
#+BIBLIOGRAPHY: /home/ian/Documents/projects/flooding/references/flooding.bib
#+OPTIONS: ^:{}
#+OPTIONS: toc:nil
# #+LATEX_HEADER: \usepackage[margin=2cm]{geometry}

# Challenge of urban pluvial flooding
Pluvial (rain-based) flooding represents a costly hazard for cities around the world, especially as climate change causes more intense rainfall and urbanization increases impervious areas [cite:@galloway_growing_2018;@hammond_urban_2015; @doocy_human_2013]. Since pluvial flooding is driven mainly by intense precipitation rather than inundation from overflowing rivers or coastal storms, it is difficult to assess which urban areas are most vulnerable to pluvial floods. Relatively minor but frequent "nuisance" flooding is particularly difficult to predict but has significant economic and health impacts [cite:@cherqui_assessing_2015;@baah_risk-based_2015]. This uncertainty represents a challenge for adaptation efforts, which often must make decisions about infrastructure deployment without a full picture of pluvial flood risk's spatial distribution [cite:@cherqui_assessing_2015; @zhou_framework_2012; @zhou_complexities_2017]. While hydrological models [cite:@al-suhili_urban_2019] and remote sensing techniques [cite:@refice_flood_2018] can contribute to models of pluvial urban flooding, both techniques are hampered by the physical complexity of the urban environment. In particular, flood mapping by synthetic aperture radar must contend with complex scattering effects due to buildings and fragmented urban land cover, while hydrological models of rain-driven floods rely on information about cities' drainage and sewage systems that is often unavailable.

Models of urban flooding can compensate for these challenges by leveraging other data sources that are available in urban areas. Indeed, large cities often provide rich datasets base on citizen reports and ground-based sensors. For example, New York City (NYC) maintains a publicly available, spatially explicit database of 311 requests (the system by which citizens make requests for municipal services), and this dataset includes over 150,000 geolocated reports of flooding (https://data.cityofnewyork.us/Social-Services/311-Service-Requests-from-2010-to-Present/erm2-nwe9/about_data). In addition, NYC has a dense network of 22 weather stations that include rain gauges (https://www.nysmesonet.org/networks/nyc), which provide accurate measurements of precipitation at high temporal resolution. Smith and Rodriguez [cite/na:@smith_spatial_2017] demonstrated the combined potential of these datasets. The authors used rain gauge measurements to calibrate a weather-radar-based spatial precipitation dataset for NYC based on weather radar, then used this precipitation dataset to analyze 311 complaints aggregated over time. They found interesting effects of terrain and seasonality on pluvial flooding, demonstrating the utility of this modelling approach. Moreover, statistical techniques such as spatiotemporal point pattern analysis [cite:@shekhar_spatiotemporal_2017] could extend their analysis by explicitly incorporating the fine-grained temporal information present in both the citizen complaints and the precipitation data, potentially allowing the calculation of local critical rainfall thresholds for pluvial floods in NYC and in other cities [cite:@yang_flash_2016; @tian_critical_2019].

Unfortunately, replicating or extending the analysis of Smith and Rodriguez [cite/na:@smith_spatial_2017] requires regenerating their spatial precipitation maps for the seven-year period since the study was published. In fact, this obstacle represents a persistent problem in urban flood studies: researchers periodically publish datasets for a single city or time period in order to facilitate hydrological analyses [cite: e.g. @wright_longterm_2014], but these datasets quickly become obsolete. Nevertheless, generating precipitation intensity maps from weather radar requires significant expertise. For example, in their processing of NEXRAD Doppler radar [cite:@heiss_nexrad_1990], Smith and Rodriguez [cite/na:@smith_spatial_2017] applied algorithms from the Hydro-NEXRAD software project [cite:@seo_radar-rainfall_2011] to account for numerous sources of error and to correct radar estimates with weather station rain gauges. Applying such radar-processing algorithms requires expertise in radar that goes significantly beyond the realm of most urban flood studies. Given the increasing importance of radar-based precipitation data in urban hydrology [cite:@thorndahl_weather_2017], weather radar processing represents a significant barrier to urban hydrology.

This challenge has been partially addressed by efforts to develop open-source software tools for radar processing [cite:@heistermann_emergence_2015]. These tools encapsulate many of the key algorithms in the literature so that practitioners do not need to re-implement them for every application. The most prominent open-source packages for weather radar processing are all Python-based. Py-ART is a Python package originally designed for the US Department of Energy's Atmospheric Radiation Measurement Climate Research Facility but which has since seen widespread adoption for research [cite:@helmus_python_2016].  Pyrad built on Py-ART to enable real-time processing of weather radar [cite:@figueras_i_ventura_pyrad_2020]. In contrast, wradlib was developed with a research rather than operational context and focuses in particular on hydrological applications [cite:@heistermann_technical_2013]. Finally, the recent package radproc [cite:@kreklow_facilitating_2019] sought to adapt similar functionality for compatibility with ArcGIS's Python interface.

Despite this robust open-source ecosystem of tools for processing weather radar, deploying any of of these packages requires expertise in both radar processing and application development; to the best of my knowledge, no available package offers an application-like interface for generating spatial precipitation intensity maps. However, the latter is precisely what is required for a long-term solution to the scarcity of spatial precipitation datasets: users should have access to a simple interface that fetches the relevant radar data from online repositories, accepts user-provided gauge measurements as CSV files, allows the selection of preferred processing methods, and then outputs precipitation intensity maps. 

In this project, I aim to produce such an application using the open-source libraries described above. I will then use the application to produce an updated database of spatial precipitation maps in New York City. This precipitation database will allow the exploration of several research questions. First, it will be interesting to compare the database to satellite products such as IMERG and gauge interpolation products such as PRISM. Second, the database could be used to study the effect of the urban environment on precipitation [cite:@liu_meta-analysis_2019]. Third, the dataset could be used to study the effect of the temporal and spatial heterogeneity of precipitation on hydrological response, which has so far been studied mainly through simulation rather than empirical data [cite:@chen_effect_2022; @peleg_partitioning_2017; @lyu_effect_2018]. Finally, I will use the precipitation dataset in an analysis of the 311 complaint dataset.

\newpage

#+PRINT_BIBLIOGRAPHY:

